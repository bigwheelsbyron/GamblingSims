import random
Deck=['2C','3C','4C','5C','6C','7C','8C','9C','10C','JC','QC','KC','AC','2D','3D','4D','5D','6D','7D','8D','9D','10D','JD','QD','KD',
      'AD','2H','3H','4H','5H','6H','7H','8H','9H','10H','JH','QH','KH','AH','2S','3S','4S','5S','6S','7S','8S','9S','10S','JS','QS','KS','AS']
DeckValues={'2C':2,'3C':3,'4C':4,'5C':5,'6C':6,'7C':7,'8C':8,'9C':9,'10C':10,'JC':10,'QC':10,'KC':10,'AC':11,'2D':2,'3D':3,'4D':4,'5D':5,'6D':6,'7D':7,'8D':8,'9D':9,'10D':10,
            'JD':10,'QD':10,'KD':10,'AD':11,'2H':2,'3H':3,'4H':4,'5H':5,'6H':6,'7H':7,'8H':8,'9H':9,'10H':10,'JH':10,'QH':10,'KH':10,'AH':11,'2S':2,'3S':3,'4S':4,'5S':5,
            '6S':6,'7S':7,'8S':8,'9S':9,'10S':10,'JS':10,'QS':10,'KS':10,'AS':11}

def KellyCriterion(b,p,q):
    print((b*p-q)/b)
def AddPlayer():
    Players[len(Players)]=[]
Players={'D':[]}
AddPlayer()
AddPlayer()
AddPlayer()
def Reshuffle_Deck():
    #Resets the deck
    Deck=['2C','3C','4C','5C','6C','7C','8C','9C','10C','JC','QC','KC','AC','2D','3D','4D','5D','6D','7D','8D','9D','10D','JD','QD','KD',
      'AD','2H','3H','4H','5H','6H','7H','8H','9H','10H','JH','QH','KH','AH','2S','3S','4S','5S','6S','7S','8S','9S','10S','JS','QS','KS','AS']    
def Drawcard():
    #Chooses a card from the "deck" and returns the value, also removes it from the deck.
    #Will not be able to re-draw this card until "reshuffle_deck" function is used
    card=(random.randint(1,len(Deck)))-1
    return(Deck.pop(card))
def AddToHand(A):
    #A is the player playing, it is a key for the dictionary
    Players[A].append(Drawcard())    
    print(Players[A])
    return(Players[A][-1])
def Value(A):
    X=0
    Value=0
    for zxc in Players[A]:
        Value+=(DeckValues[Players[A][X]])
        X+=1
    return(Value)
def StartingRound():
    AddToHand('D')
    print(("Dealers hand value is: {}").format((Value('D'))))
    X=1
    for player in range ((len(Players)-1)):
        AddToHand(X)
        AddToHand(X)
        print(("Player {}'s hand value is: {}").format(X,(Value(X))))
        X+=1
def Prob(A):
    #Calculates % chance of drawing and going bust
    x=0
    ProbChance=0
    for num in Deck:
        if DeckValues[Deck[x]]>A:
            ProbChance+=1
        x+=1
    return((ProbChance/len(Deck)))
def RoundTwo():
    X=1
    for player in range ((len(Players)-1)):
        while Prob((21-(Value(X))))<.499:
            print(("Player {}'s chance of going bust is {}.").format(X,Prob((21-(Value(X))))))
            print(("Player {} draws").format(X))
            AddToHand(X)
            print(("Player {}'s new hand value is: {}").format(X,(Value(X))))
        else:
            print(("Player {}'s chance of going bust is {}.").format(X,Prob((21-(Value(X))))))
            print(("Player {} holds").format(X))
            X+=1
def Play():
    StartingRound()
    RoundTwo()
Play()
